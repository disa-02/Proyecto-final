Dado los siguientes temas. Agrupa sus elementos según su relación semántica. 
                Los temas no pueden pertenecer a mas de un grupo. 
                Dar la respuesta en un json  donde cada atributo sea el nombre de grupo y el valor una lista de los temas. 
                El nombre de grupo debe ser representativo a los temas que agrupa. 
                La lista de temas debe ser unicamente numerica y cada numero debe corresponder al 
                identificador de cada tema, no debe haber strings en este atributo.
                No utilices saltos de lineas ni espacios en la respuesta.
                Intenta que en las agrupaciones no queden grupos con un unico tema.
                Lista de temas:  records 1413-goal the creates new in 1414-goal specific existing can be 1415-goal returns the complete record 1416- the goal updated be 1417-followers goal the to 1418-goal relationship creat by adding 1419-of returns compact representation all 1420-followers goal the from 1421-goal remov relationship for given 1422-goal metric creates and adds 1423- updat goals existing metrics 1424-returns the full record for 1425-request export the this method 1426-returns details of previouslyrequested organization 1427- portfolio and user returns 1428-portfolio returns the complete record 1429-the returns list of portfolio 1430-the  portfolio created state 1431-an portfolio  existing can 1432-portfolio returns the complete record 1433- the portfolio updated be 1434-custom portfolio setting fields are 1435-an add item to portfolio 1436-the of portfolio adds specified 1437-of returns list all the 1438-in get list of the 1439-the portfolio returns compact membership 1440-remov custom field setting from 1441-an remove item from portfolio 1442-the of portfolio remov specified 1443-delete specific existing project brief 1444-get the full record for 1445- the project brief updated 1446-project returns the complete record 1447- deprecated new integrations should 1448- the deprecated new integrations 1449-the project returns compact template 1450-project template returns the complete 1451- the to project this 1452-the for of projects returns 1453- project the workspace or 1454-project  specific existing can 1455-project returns the complete record 1456- the project updated fields 1457-custom setting fields are associated 1458-the of project members users 1459-the of as added this 1460-the in compact of all 1461-creates and returns job that 1462-project brief the creates new 1463-the project returns compact membership 1464-the  project deprecated new 1465-the  new status update 1466-remov custom field setting from 1467-the project remov specified list 1468-the of project remov specified 1469-the project in that template 1470-the returns compact records for 1471-section the creates new in 1472- sections move relative to 1473- are get an fields 1474-the project tasks within returns 1475-be  section deleted the 1476-returns the complete record for 1477- the updated be that 1478-the task section of this 1479-the section board view only 1480-the returns compact status update 1481-status update the creates new 1482-delete specific existing status update 1483-returns the complete record for 1484-deletes story user can only 1485-returns the full record for 1486-and  the only stories 1487-the of tags returns compact 1488- tag workspace or organization 1489-tag  specific existing can 1490-tag returns the complete record 1491- the tag fields you 1492-the tasks tag returns compact 1493- the task for of 1494- task the to set 1495-the  task can be 1496-task returns the complete record 1497- the task updated fields 1498-dependenci of task marks set 1499-of dependents task marks set 1500-followers task to  the 1501- the section task to 1502-adds tag to task returns 1503-of the returns compact representations 1504-of the returns compact representations 1505-creates and returns job that 1506-of the returns compact representation 1507-unlinks set of dependencies from 1508-unlinks set of dependents from 1509-the task removes each of 1510-the task project will in 1511-remov tag from task returns 1512- parent at and of 1513-the returns compact records for 1514-the to  story task 1515-of returns compact representation all 1516-the subtask creates new and 1517-of the get compact representation 1518-returns compact team membership records 1519-team membership returns the complete 1520-creat team within the current 1521-updat team within the current 1522-returns the full record for 1523-the user team must in 1524-the project returns compact template 1525-the returns compact project records 1526-the project creates shared with 1527-the user making this call 1528-the team returns compact memberships 1529-the  for users are 1530-returns compact time period record 1531-returns the full record for 1532-returns the full record for 1533-tasks  the for list 1534-user the all id returns 1535-the user returns full record 1536-the given of in order 1537-the returns compact team membership 1538-the returns compact records for 1539-returns the full record for 1540-the returns compact workspace membership 1541-the get compact representation of 1542- the to webhook post 1543-webhook that be this method 1544-the returns full record for 1545-the  filter webhooks be 1546-workspace returns the complete record 1547-the returns compact records for 1548-workspace returns the full record 1549-the workspace be updated can 1550-user the or their add 1551-the  events that of 1552-of the returns list compact 1553-the  for endpoint returns 1554-the project  returns for 1555-user the workspace or 1556-the of tags returns compact 1557- tag workspace or organization 1558- the of to search 1559-the returns compact records for 1560- the to is of 1561-the  for users results 1562-the workspace returns compact membership 1563-enumerate all activar channels of 1564-get metadata of channel 1565-get message history for channel 1566-publish message to the specified 1567-get presence on channel 1568-get presence on channel 1569-the tokenrequest ably is to 1570-deletir device details object 1571-get list of push notification 1572-to subscribe either single device 1573-returns paginated response of channel 1574-unregisters deviz all their subscriptions 1575-of list device detail deviz 1576-to register deviz details including 1577-device its unregisters single by 1578-get the full details of 1579-specific attributes of an existing 1580-device registrations can be upserted 1581-gets an updated device details 1582-to convenience endpoint deliver push 1583-the in be to usage 1584-the this returns service time 1585-the creates new adult_content task 1586-gets the adult_content task 1587-image content givir an and 1588-the artistic_image will have urls 1589-object the creates new detect 1590-gets the detect_object task 1591-the of get list all 1592-gets the face task 1593-the age creates new face 1594-gets the face_age task 1595-endpoint permitir actualizar información mascota 1596-add new pet to the 1597-multiple status values can be 1598-multiple tag can be provided 1599-returns single pet 1600-endpoint permitir agregar mascota base 1601-deletir pet 1602-endpoint petpetiduploadimage permitir subir imagen 1603-returns map of status codes 1604-placir new order in the 1605- for valid response try 1606-1000 for valid response try 1607-this can only be done 1608-creat list of users with 1609-usuario endpoint permitir iniciar sesión 1610-endpoint permitir cerrar sesión usuario 1611-usuario endpoint permitir obtener información 1612-this can only be done 1613-this can only be done 1614-endpoint permitir solicitud opción servidor 1615-endpoint permitir petición http método 1616-endpoint tipo options permitir cliente 1617-create new account 1618-get account balance 1619-endpoint permitir obtener opción específico 1620-access detailed block information 1621-endpoint block permitir solicitud options 1622-get information about particular block 1623-endpoint blockid permitir solicitud options 1624-get transaction count within block 1625-endpoint blockidtransaction permitir obtener transacción 1626-get information about particular transaction 1627-endpoint permitir acceder transacción bloque 1628-get list of supported blockchains 1629-endpoint retornar respuesta vacío formato 1630-get information about blockchain woth 1631-endpoint permitir obtener opción relacionado 1632-respuesta endpoint api proporcionar opción 1633-create new smart contract 1634-get contract balance 1635- endpoint permitir obtener opción 1636-call the contract 1637-endpoint echo devolver respuesta vacío 1638-endpoint echo permitir petición método 1639-get token information such as 1640-solicitud endpoint proporcionar opción manejar 1641-endpoint permitir solicitud creación token 1642-get information amout token balance 1643-endpoint erc20address permitir recibir opción 1644-transfer tokens to another account 1645-endpoint key método get devolver 1646-endpoint definir opción disponible respuesta 1647-endpoint permitir agregar clave diccionario 1648-endpoint permitir eliminar elemento específico 1649-endpoint keykey permitir solicitud options 1650-endpoint permitir solicitud opción transacción 1651-create new transaction transfer ether 1652-transaction get information about by 1653-endpoint devolver respuesta exitoso objeto 1654-get receipt detail information 1655-endpoint transactionhashreceipt permitir obtener recibo 1656-get api version info 1657-endpoint devolver lista opción disponible 1658-get current account balance 1659-respuesta endpoint opción wallet devolver 1660-create personal wallet 1661-endpoint permitir solicitud get obtener 1662-endpoint wallet account permitir solicitud 1663-endpoint wallet account permitir creación 1664-get account balance 1665-endpoint permitir opción billetera particular 1666-endpoint permitir creación contrato billetera 1667-respuesta endpoint permitir usuario crear 1668-endpoint wallet accountidpay permitir pago 1669-the send payment from account 1670-endpoint realizar introspección token bearer 1671-this endpoint requires your json 1672-this endpoint requires your json 1673-this endpoint requires your json 1674-token endpoint utilizar introspección bearerConsiderar que ya existen los siguientes grupos como atributos del json.
                                            Analizar si un tema puede pertenecer a uno de estos grupos o es necesario agruparlo en uno nuevo.
                                            Debes tener en cuenta la relacion semantica de cada tema: 1-Custom Fields 2-Team Management 3-Tag Management 4-Goal Tracking 5-Goal Relationships 6-Push Notifications 7-Authentication and Authorization 8-Project Management 9-Task Management 10-Blockchain Management